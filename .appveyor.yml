image: ubuntu

#shallow_clone: true

environment:
  myvar1: Hello, world!
  ANOTHER_VAR: Test!!!

cache:
- node_modules

services:
- docker

install:
- pwsh: Write-Host "Привет, Креведко!" -ForegroundColor Yellow
- pwsh: Write-Host "こんにちは、エビ" -ForegroundColor Magenta
- ps: $env:APPVEYOR_API_URL
- npm install node-pty
- ps: 'Get-ChildItem env:'
#- sh: echo "А это ранается Bash!"
#- ps: |
#    Write-Host "First line!"
#    ./test.ps1
    
#- ps: |
#    $headers = @{
#      "Content-type" = "application/json"
#    }
#    
#    $body = @{
#      "name" = "AAA"
#      "fileName" = "BBBBBBB111.zip"
#      "path" = "A/B/C/BBBBBBB111.zip"
#    }
#    
#    Invoke-WebRequest -Method POST -Uri $env:APPVEYOR_API_URL/api/artifacts -Headers $headers -Body (ConvertTo-Json $body -Depth 6)
#- ps: Set-Variable -Name "VerbosePreference" -Value "Continue" -Scope Global -Force
#- sh: appveyor --version
- pwsh: appveyor version
- appveyor version
- sh: appveyor PushArtifact test.js
- pwsh: Push-AppVeyorArtifact -Path build-agent-api.ps1
- pwsh: Start-FileDownload 'https://dl.dropboxusercontent.com/s/c1by0uulee6g8th/wxWidgets.7z?dl=0' -FileName wxWidgets.7z
- appveyor DownloadFile https://dl.dropboxusercontent.com/s/c1by0uulee6g8th/wxWidgets.7z?dl=0 -FileName wxWidgets.7z
#- ps: Exit-AppVeyorBuild

#- sh: ls /tmp -al
- sh: ls -al
- sh: appveyor UpdateBuild -version "1.2.${APPVEYOR_BUILD_NUMBER}" -message "Hi there, Bash!"
#- sh: appveyor UpdateBuild --version="1.5.${APPVEYOR_BUILD_NUMBER}" --message="Hi there, Bash in Linux!"
#- ps: Update-AppVeyorBuild -Version "1.7.${APPVEYOR_BUILD_NUMBER}" -message "Hi there, PowerShell!"
#- ps: Bump
- sh: printenv
- sh: echo -e "Default \033[42mGreen"
- echo Hi there! This is white text on green background!
- sh: echo -e "Default \e[49mDefault"
- ps: |
    Write-Host "Setting 'aaa' variable in one script" -ForegroundColor Green
    $env:aaa = 'Hello, World!'

- sh: whoami
#- sh: lsb_release -a
#- sh: printenv
#- sh: touch /tmp/tmp-1
#- ls /tmp/ -al
#- sh: powershell ./test.ps1
#- appveyor PushArtifact test.txt
- echo "Should be run on both Windows and Mac"
#- sh: ENV

- ps: |
    Write-Host "Displaying 'aaa' variable in another script: $env:aaa"

#- batch: should be skipped by both platforms
#- ps: 'gci env:'
#- ls
#- sh: ls $HOME
#- sh: echo "This is Bash script!"
- npm --version
- appveyor AddTest --name=TestA --framework=NUnit --fileName=Assembly1.dll --outcome=Running
- pwsh: Update-AppVeyorTest -name "TestA" -fileName "Assembly1.dll" -outcome "Passed" -duration 1200 -stdOut "This is StdOut" -stdErr "This is StdErr"
#- ps: 'Write-Host "This is run on Windows only: $env:USERPROFILE"'
#- cmd: 'echo This run on Windows too: %USERPROFILE%'
#- sh: appveyor PackageArtifacts
#- sh: appveyor PushArtifact readme.md --fileName readme.md
#- sh: appveyor PushArtifact --path '**/*.md'
#- stat /tmp
#- rm /tmp/tmp-*
#- ls /tmp/ -al
#- pwsh: $env:test_variable_1 = "test_variable_1 secret value!"
#- sh: export bash_var_2="This is bash variable!"
- appveyor AddMessage --message='test message from bash 1' --category='Error' --details="This is some details!"
- pwsh: Add-AppVeyorCompilationMessage -message 'test message from batch 1' -category 'Information' -details "This is some details!" -line 10 -column 1
#- pwsh: |
#    Write-Host "Something on the first line"
#    #./build-agent-api.ps1
#- appveyor SetVariable --name="bash_var_2" --value="surprise!"
#- echo ${test_variable_1}
#- echo ${bash_var_2}
#- appveyor exit

test_script:
- sh: docker info
- sh: docker run hello-world

build: off

artifacts:
- path: README.md
- path: test

on_success:
- echo On success script!

on_failure:
- echo On failure script!!

on_finish:
- ps: Write-Host 'I''m on_finish script!'
#- ps: Write-Message "I'm problematic on_finish script!"

